# -*- coding: utf-8 -*-
"""Local_sports_Analysis

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1r-tmz5ohZjDNfMFJPDh6GN3HI6YyD3vr

## **Loading Dataset**
"""

import pandas as pd

# Load dataset
file_path = '/content/Local_sports_dataset.csv'
df = pd.read_csv(file_path)
df

"""## **Analyze Participants by Age**"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the data
data = pd.read_csv('/content/Local_sports_dataset.csv')

# Participation Analysis: Compare participation across different sports and age groups
participation = data.groupby(['Sport', 'Participant Age Group']).size().unstack()
participation.plot(kind='bar', stacked=True, figsize=(10, 6), cmap='viridis')
plt.title('Participation Across Sports and Age Groups')
plt.xlabel('Sport')
plt.ylabel('Number of Participants')
plt.legend(title='Age Group', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.show()

"""
# **Audience Preferences: Identify the most popular sports among attendees**"""

audience_preferences = data['Audience Favourite Sport'].value_counts()
audience_preferences.plot(kind='pie', figsize=(8, 8), autopct='%1.1f%%', colors=['blue', 'cyan','red', 'lime', 'orange', 'pink'])
plt.title('Most Popular Sports Among Attendees')
plt.tight_layout()
plt.show()

"""
## **Event Popularity Metrics: Analyze ticket sales and attendance patterns**"""

# Convert 'Tickets Sold' to numeric for aggregation
data['Tickets Sold'] = pd.to_numeric(data['Tickets Sold'], errors='coerce')

# Group by 'Sport' and sum 'Tickets Sold'
ticket_sales = data.groupby('Sport')['Tickets Sold'].sum()

plt.figure(figsize=(10, 6))
ticket_sales.plot(kind='line', marker='o', color='red', linestyle='-')
plt.title('Total Tickets Sold by Sport')
plt.xlabel('Sport')
plt.ylabel('Total Tickets Sold')
plt.grid(True)
plt.xticks(ticks=range(len(ticket_sales)), labels=ticket_sales.index, rotation=45)
plt.tight_layout()
plt.show()

"""
# Performance Trends: Highlight top performers and winning **streaks**"""

top_performers = data['Top Scorer'].value_counts().head(10)
top_performers.plot(kind='barh', figsize=(10, 6), color='lime')
plt.title('Top Performers (Most Scores)')
plt.xlabel('Number of Scores')
plt.ylabel('Top Scorer')
plt.tight_layout()
plt.show()

"""# **Most winning By Team**"""

winning_streaks = data['Event Winner'].value_counts().head(10)
plt.figure(figsize=(10, 6))
plt.scatter(winning_streaks.index, winning_streaks.values, color='gold', s=100)
plt.title('Winning Streaks (Most Wins by Team)')
plt.xlabel('Event Winner')
plt.ylabel('Number of Wins')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

